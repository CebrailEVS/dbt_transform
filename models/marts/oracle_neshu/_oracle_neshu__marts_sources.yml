version: 2

# ============================================
# SOURCES EXTERNES - MARTS ORACLE NESHU
# ============================================
# Tables cr√©√©es en dehors de la pipeline dbt standard
# (scripts Python ETL, outils tiers, etc.)
# ============================================

sources:
  - name: marts_oracle_neshu_external
    description: |
      Tables de la couche marts cr√©√©es par des pipelines externes √† dbt.
      
      **‚ö†Ô∏è IMPORTANT :**
      Ces tables ne sont PAS g√©n√©r√©es par dbt run, mais par des scripts Python
      orchestr√©s via Airflow. Elles sont document√©es ici pour :
      - Centraliser la documentation
      - Permettre les tests de qualit√© via dbt test
      - Assurer la visibilit√© dans dbt docs
      - Permettre les r√©f√©rences dans d'autres mod√®les dbt
      
    database: evs-datastack-prod
    schema: prod_marts
    
    tables:
      # ============================================
      # TABLE : PASSAGES APPRO ROADMAN (HOURLY REFRESH)
      # ============================================
      - name: fct_oracle_neshu__passages_appro
        description: |
          **Table des passages approvisionneurs roadman**
          
          üìç **SOURCE DE CR√âATION :**
          - Script : `/mnt/data/extract_load/scripts/oracle_neshu/passages_appro_etl.py`
          - Requ√™te SQL : `/mnt/data/extract_load/scripts/oracle_neshu/queries/passages_appro_extract.sql`
          - DAG Airflow : `dag_passages_appro_hourly` (√† cr√©er)
          
          üîÑ **REFRESH :**
          - Fr√©quence : Toutes les heures entre 6h-15h
          - Mode : TRUNCATE (full refresh)
          - Historique : 15 derniers jours
          
          üìä **DONN√âES :**
          - Source : Oracle Neshu (TASK, TASK_HAS_RESOURCES, LABEL_HAS_TASK, etc.)
          - Transformations : Effectu√©es dans la requ√™te SQL Oracle (CTEs)
          - P√©riode : Passages des 15 derniers jours
          - Filtres : Statuts PREVU, ENCOURS, FAIT uniquement
          
          üéØ **USAGE M√âTIER :**
          Cette table est utilis√©e pour le suivi en quasi temps-r√©el des passages
          approvisionneurs des roadmen chez les clients. Contrairement aux autres
          tables marts qui sont rafra√Æchies quotidiennement, celle-ci n√©cessite
          un refresh horaire pour les besoins op√©rationnels.
          
          ‚ö†Ô∏è **ATTENTION :**
          Ne pas modifier cette table via dbt ! Toute modification doit se faire
          dans le script Python ou la requ√™te SQL source.
          
        meta:
          owner: "Data Engineering"
          refresh_frequency: "hourly"
          refresh_schedule: "0 6-15 * * *"
          data_retention_days: 15
          external_pipeline: true
          pipeline_type: "Python ETL"
          
        loaded_at_field: loaded_at
        
        columns:
          - name: task_id
            description: "Identifiant unique de la t√¢che de passage (cl√© primaire)"
            data_type: integer
            tests:
              - unique
              - not_null
          
          - name: roadman_code
            description: |
              Code du roadman (ressource de type 2) assign√© au passage.
              Un roadman peut avoir plusieurs passages dans la journ√©e.
            data_type: string
          
          - name: company_code
            description: "Code client (idcompany_peer de la t√¢che)"
            data_type: string
          
          - name: company_name
            description: "Nom du client"
            data_type: string

          - name: company_info
            description: |
              Info complet du client au format 'nom - code'. 
            data_type: string
          
          - name: device_id
            description: "Identifiant de l'√©quipement/machine concern√©"
            data_type: integer
          
          - name: device_info
            description: |
              Info complet de l'√©quipement au format 'nom - code'.
              Exemple : 'MOMENTO - ASXXXX'
            data_type: string
          
          - name: passage_start_datetime
            description: |
              Date et heure de d√©but r√©el du passage (real_start_date de la t√¢che).
              Utilis√© pour le calcul de dur√©e et s√©quencement.
            data_type: timestamp
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "<= passage_end_datetime"
                  config:
                    severity: warn
          
          - name: passage_start_date
            description: |
              Date du passage sans l'heure (TRUNC de passage_start_datetime).
              Utilis√© pour les agr√©gations journali√®res.
            data_type: date
          
          - name: passage_end_datetime
            description: |
              Date et heure de fin r√©elle du passage (real_end_date de la t√¢che).
              Peut √™tre NULL si passage en cours.
            data_type: timestamp
          
          - name: day_start_datetime
            description: |
              Heure de pointage du roadman ce jour-l√† (premier pointage valide apr√®s 3h).
              NULL si pas de pointage trouv√©. Utilis√© pour calculer les retards/avances.
            data_type: timestamp
          
          - name: passage_status
            description: |
              Statut du passage :
              - PREVU : Passage planifi√© mais pas encore commenc√©
              - ENCOURS : Passage en cours d'ex√©cution
              - FAIT : Passage termin√© et valid√©
            data_type: string
          
          - name: passage_duration_min
            description: |
              Dur√©e du passage en minutes, calcul√©e par :
              (passage_end_datetime - passage_start_datetime) * 24 * 60
              NULL si passage pas encore termin√©.
            data_type: float
            tests:
              - dbt_utils.expression_is_true:
                  expression: ">= 0 OR passage_duration_min IS NULL"
                  config:
                    severity: warn
          
          - name: is_done
            description: |
              Flag binaire indiquant si le passage est termin√©.
              1 = FAIT, 0 = PREVU ou ENCOURS
            data_type: integer
          
          - name: is_planned
            description: |
              Flag binaire indiquant si le passage est planifi√© ou r√©alis√©.
              1 = PREVU, ENCOURS ou FAIT
              0 = Autres statuts (normalement filtr√© en amont)
            data_type: integer
          
          - name: passage_sequence
            description: |
              Num√©ro de s√©quence du passage pour ce roadman dans la journ√©e.
              Calcul√© par ROW_NUMBER() PARTITION BY roadman ORDER BY start_datetime.
              Permet d'identifier le 1er, 2√®me, 3√®me passage du roadman.
            data_type: integer
          
          - name: loaded_at
            description: |
              Timestamp de chargement dans BigQuery (ajout√© par le script Python).
              Permet de tracer quand les donn√©es ont √©t√© rafra√Æchies.
            data_type: timestamp
            tests:
              - not_null

        # Tests au niveau de la table
        tests:
          # V√©rifier qu'il n'y a pas de doublons sur task_id + roadman_code
          - dbt_utils.unique_combination_of_columns:
              combination_of_columns:
                - task_id
                - roadman_code
              config:
                severity: error
          
          # V√©rifier qu'on a bien des donn√©es r√©centes (moins de 24h)
          - dbt_utils.recency:
              datepart: hour
              field: loaded_at
              interval: 24
              config:
                severity: error